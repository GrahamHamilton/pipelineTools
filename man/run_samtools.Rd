% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_samtools.R
\name{run_samtools}
\alias{run_samtools}
\title{Run Samtools}
\usage{
run_samtools(
  command = NULL,
  input = NULL,
  output = NULL,
  sample.name = NULL,
  threads = 10,
  mapq = NULL,
  memory = "5G",
  samtools = NULL,
  version = FALSE
)
}
\arguments{
\item{command}{Samtools command to run, at present can choose from 'view', 'sort' and 'index', required}

\item{input}{List of aligned files in sam or bam format, required}

\item{output}{List of file names for output,}

\item{sample.name}{List of sample names, required}

\item{threads}{Number of threads for samtools to use, default set to 10}

\item{mapq}{Set to minimum mapping quality, for filtering bam files}

\item{memory}{Set maximum memory per thread, default set to 5Gb}

\item{samtools}{Path to the samtools program, required}

\item{version}{Returns the version number}
}
\value{
A list with the samtools commands
}
\description{
Runs the samtools program
}
\examples{
\dontrun{
alignments_path <- "hisat2_alignments"
sam.files <- list.files(path = alignments_path, pattern = "sam$",
                       full.names = TRUE, recursive = TRUE)
bam.files <- gsub(sam.files, pattern = ".sam", replacement = ".bam")
sorted.bam.files <- gsub(sam.files, pattern = ".sam", replacement = "_sorted.bam")
sample_names <- unlist(lapply(strsplit(list.files(path = reads_path,
                       pattern = "*_R1_001.fastq$",
                       full.names = FALSE),"_"), `[[`, 1))

command <- "view"
samtools.cmds <- run_samtools(command,
                              sam.files,
                              bam.files,
                              sample_names
                              samtools = samtools.path))
samtools.cmds

command <- "sort"
samtools.cmds <- run_samtools(command,
                              bam.files,
                              sorted.bam.files
                              samtools = samtools.path)
samtools.cmds

command <- "index"
samtools.cmds <- run_samtools(command,
                              sorted.bam.files,
                              samtools = samtools.path)
samtools.cmds
}

}
