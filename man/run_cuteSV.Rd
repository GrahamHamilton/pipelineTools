% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_cuteSV.R
\name{run_cuteSV}
\alias{run_cuteSV}
\title{Run cuteSV}
\usage{
run_cuteSV(
  input = NULL,
  reference = NULL,
  sample.names = NULL,
  bed = NULL,
  out.dir = NULL,
  platform = NULL,
  max_cluster_bias_INS = NULL,
  diff_ratio_merging_INS = NULL,
  max_cluster_bias_DEL = NULL,
  diff_ratio_merging_DEL = NULL,
  min_mapq = NULL,
  min_support = NULL,
  min_size = NULL,
  max_size = NULL,
  parallel = FALSE,
  cores = 4,
  execute = FALSE,
  cuteSV = NULL,
  version = FALSE
)
}
\arguments{
\item{input}{List of sorted bam files, required}

\item{reference}{Path to the fasta formatted reference}

\item{sample.names}{List of the sample names}

\item{bed}{Only detect SVs in regions in the BED file}

\item{out.dir}{Name of the directory from the cuteSV output}

\item{platform}{Names of the sequencing platform, choose either "ONT", "PacBio_CLR",
"PacBio_CCS" or "FORCE"}

\item{max_cluster_bias_INS}{Maximum distance to cluster reads together for insertion.}

\item{diff_ratio_merging_INS}{Do not merge breakpoints with basepair identity more
than [0.3] for insertion.}

\item{max_cluster_bias_DEL}{Maximum distance to cluster read together for
deletion.}

\item{diff_ratio_merging_DEL}{Do not merge breakpoints with basepair identity more
than [0.5] for deletion.}

\item{min_mapq}{Minimum mapping quality value of alignment to be taken
into account.}

\item{min_support}{Minimum number of reads that support a SV to be reported.}

\item{min_size}{Minimum size of SV to be reported.}

\item{max_size}{Maximum size of SV to be reported. All SVs are reported when using -1}

\item{parallel}{Run in parallel, default set to FALSE}

\item{cores}{Number of cores/threads to use for parallel processing, default set to 4}

\item{execute}{Whether to execute the commands or not, default set to TRUE}

\item{cuteSV}{Path to the cuteSV program, required}

\item{version}{Returns the version number}
}
\value{
A list with the Minimap2 commands
}
\description{
cuteSV, a long-read-based structural variant detection program
}
\examples{
\dontrun{
cuteSV.path <- "path/to/cuteSV"

run_cuteSV(cuteSV = cuteSV.path,
           version = TRUE)

out.dir <- "VCF"
sample.names <- c("sample_1","sample_2","sample_3")
sorted.bam.files <- c("sample_1.bam","sample_2.bam","sample_3.bam")
genome = "/datastore/Gneomes/Reference/genome.fa"

run_cuteSV(input = sorted.bam.files,
           reference = genome,
           sample.names = sample.names,
           out.dir =out.dir,
           platform = "ONT",
           cuteSV = cuteSV.path)
}

}
