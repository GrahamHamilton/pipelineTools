% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_kallisto.R
\name{run_kallisto}
\alias{run_kallisto}
\title{Run Kallisto}
\usage{
run_kallisto(
  mate1 = NULL,
  mate2 = NULL,
  index = NULL,
  sample.name = NULL,
  fusion = NULL,
  strandedness = NULL,
  out.dir = NULL,
  threads = 10,
  bootstrap = 100,
  fragment.length = 300,
  std.dev = 25,
  parallel = FALSE,
  cores = 4,
  kallisto = "",
  version = FALSE
)
}
\arguments{
\item{mate1}{List of the paths to files containing to the forward reads, required}

\item{mate2}{List of the paths to files containing to the reverse reads, required for paired end sequence data}

\item{index}{Path to the reference transcriptome kallisto index, required}

\item{sample.name}{List of the sample names, required}

\item{fusion}{Search for fusions used for Pizzly}

\item{strandedness}{Strand spcific reads, values are "first" or "second"}

\item{out.dir}{Name of the directory from the Kallisto output. If NULL,
which is the default, a directory named "kallisto" is created in the current working directory.}

\item{threads}{Number of threads for kallisto to use, default set to 10}

\item{bootstrap}{Number of bootstrap samples, default set to 100}

\item{fragment.length}{Estimated average insert fragment size, must be set for single end sequence data}

\item{std.dev}{Estimated standard deviation of insert fragment size, must be set for single end sequence data}

\item{parallel}{Run in parallel, default set to FALSE}

\item{cores}{Number of cores/threads to use for parallel processing, default set to 4}

\item{kallisto}{Path to the kallisto program, required}

\item{version}{Returns the version number}
}
\value{
A list with the kallisto commands
}
\description{
Runs the kallisto quant tool
}
\examples{
 \dontrun{
trimmed_reads_dir <- "trimmed_reads"
mate1 <- list.files(path = trimmed_reads_dir, pattern = "*_R1_001.fastq$", full.names = TRUE)
mate2 <- list.files(path = trimmed_reads_dir, pattern = "*_R2_001.fastq$", full.names = TRUE)

sample_names <- unlist(lapply(strsplit(list.files(path = trimmed_reads_dir,
                       pattern = "*_R1_001.fastq$",
                       full.names = FALSE),"_"), `[[`, 1))

index <- "/export/buzz1/Genome/Homo_sapiens/Ensembl/GRCH38_p7/Sequence/Transcriptome/
          KallistoIndex/GRCh38_p7.kall"

strandedness <- "second"

# Paired end
kallisto.cmds <- run_kallisto(mate1 = mate1,
                              mate2 = mate2,
                              index = transcriptome,
                              sample.name = sample.names,
                              strandedness = strandedness,
                              out.dir = kalisto.results.dir,
                              kallisto = "/software/kallisto_v0.45.1/kallisto")
# Single end
kallisto.cmds <- run_kallisto(mate1 = mate1,
                              index = transcriptome,
                              sample.name = sample.names,
                              strandedness = strandedness,
                              fragment.length = 300,
                              std.dev = 25,
                              out.dir = kalisto.results.dir,
                              kallisto = "/software/kallisto_v0.45.1/kallisto")
}

}
