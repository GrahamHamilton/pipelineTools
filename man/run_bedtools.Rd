% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_bedtools.R
\name{run_bedtools}
\alias{run_bedtools}
\title{Run the Bedtools program}
\usage{
run_bedtools(
  command = NULL,
  input = NULL,
  reference = NULL,
  out.dir = NULL,
  sample.names = NULL,
  counts = FALSE,
  bedtools = NULL,
  version = FALSE
)
}
\arguments{
\item{command}{Bedtools command to run, at present can only choose from 'coverage' or 'bamtobed', required}

\item{input}{List of aligned files in bam format, required}

\item{reference}{GTF file fro calculating the depth of coverage intervals}

\item{out.dir}{Name of the directory from the Bedtools output}

\item{sample.names}{List of sample names, required}

\item{counts}{Only report the count of overlaps, default set to FALSE}

\item{bedtools}{Path to the bedtools program, required}

\item{version}{Returns the version number}
}
\value{
A list with the bedtools commands
}
\description{
Runs the bedtools program, currently only supports coverage
}
\examples{
\dontrun{
# Version
bedtools.path <- "/software/bedtools2/bin/bedtools"
bedtools.version <- run_bedtools(bedtools = bedtools.path,
                                 version = TRUE)

# Bedtools coverage
command = "coverage"
outputDirectory <- "coverage"
sam.files <- list.files(path = alignments.path, pattern = "sam$",
                        full.names = TRUE,
                        recursive = TRUE)
sorted.bam.files <- gsub(sam.files,
                         pattern = ".sam",
                         replacement = "_sorted.bam")
sample_names <- unlist(lapply(strsplit(list.files(path = reads_path,
                       pattern = "*_R1_001.fastq$",
                       full.names = FALSE),"_"), `[[`, 1))
gtfFile <- "mirBase/hsa.ensembl.gff3"

bedtools.cmds <- run_bedtools(command = command,
                              input = sorted.bam.files,
                              reference = gtfFile,
                              out.dir = outputDirectory,
                              sample.names = sample.names,
                              counts = TRUE,
                              bedtools = bedtools.path)
bedtools.cmds
}

}
